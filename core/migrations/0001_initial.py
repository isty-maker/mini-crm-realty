# Generated by Django 5.2.7 on 2025-10-05 11:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        unique=True,
                        verbose_name="Внешний ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("house", "Дом"),
                            ("flat", "Квартира"),
                            ("room", "Комната"),
                            ("commercial", "Коммерция"),
                            ("land", "Земля"),
                            ("garage", "Гараж"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Тип объекта",
                    ),
                ),
                (
                    "operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("sale", "Продажа"),
                            ("rent_long", "Аренда"),
                            ("rent_daily", "Посуточно"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Тип сделки",
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="Подтип"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Активен"), ("archived", "В архиве")],
                        default="active",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "export_to_cian",
                    models.BooleanField(default=True, verbose_name="Экспорт в ЦИАН"),
                ),
                ("export_to_domklik", models.BooleanField(default=False)),
                (
                    "is_archived",
                    models.BooleanField(default=False, verbose_name="В архиве"),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="Заголовок (внутр.)"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Адрес (как на Я.Картах)",
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Широта",
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Долгота",
                    ),
                ),
                (
                    "cadastral_number",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="Кадастровый номер"
                    ),
                ),
                (
                    "phone_country",
                    models.CharField(
                        blank=True, default="7", max_length=8, verbose_name="Код страны"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="Телефон №1"
                    ),
                ),
                (
                    "phone_number2",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="Телефон №2 (опц.)"
                    ),
                ),
                (
                    "layout_photo_url",
                    models.URLField(blank=True, verbose_name="URL планировки (опц.)"),
                ),
                (
                    "object_tour_url",
                    models.URLField(blank=True, verbose_name="URL 3D-тура (опц.)"),
                ),
                (
                    "building_name",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        verbose_name="Название здания/ЖК (опц.)",
                    ),
                ),
                (
                    "building_floors",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Этажей в здании"
                    ),
                ),
                (
                    "building_build_year",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Год постройки"
                    ),
                ),
                (
                    "building_material",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("aerocreteBlock", "Газобетонный блок"),
                            ("arbolit", "Арболит"),
                            ("boards", "Щитовой"),
                            ("brick", "Кирпичный"),
                            ("expandedClayConcrete", "Керамзитобетон"),
                            ("foamConcreteBlock", "Пенобетонный блок"),
                            ("gasSilicateBlock", "Газосиликатный блок"),
                            ("gluedLaminatedTimber", "Клееный брус"),
                            ("metalFrame", "Металлокаркас"),
                            ("monolith", "Монолит"),
                            ("reinforcedConcretePanels", "ЖБ панели"),
                            ("sipPanels", "СИП-панели"),
                            ("slagConcrete", "Шлакобетон"),
                            ("solidWood", "Цельное дерево"),
                            ("wireframe", "Каркасный"),
                            ("wood", "Деревянный"),
                        ],
                        max_length=64,
                        verbose_name="Материал здания",
                    ),
                ),
                (
                    "building_ceiling_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="Высота потолков, м",
                    ),
                ),
                (
                    "building_passenger_lifts",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Пассажирских лифтов"
                    ),
                ),
                (
                    "building_cargo_lifts",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Грузовых лифтов"
                    ),
                ),
                (
                    "flat_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("apartment", "Квартира"),
                            ("studio", "Студия"),
                            ("apartments", "Апартаменты"),
                            ("penthouse", "Пентхаус"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Подтип квартиры",
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("separate", "Изолированная"),
                            ("combined", "Совмещенная"),
                            ("both", "Оба варианта"),
                        ],
                        max_length=16,
                        verbose_name="Тип комнат",
                    ),
                ),
                (
                    "flat_rooms_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Кол-во комнат (кв.)"
                    ),
                ),
                (
                    "room_type_ext",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("room", "Комната"),
                            ("share", "Доля комнаты/комната в квартире"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Подтип комнаты",
                    ),
                ),
                (
                    "is_euro_flat",
                    models.BooleanField(default=False, verbose_name="Европланировка"),
                ),
                (
                    "is_apartments",
                    models.BooleanField(
                        default=False, verbose_name="Апартаменты (юрид.)"
                    ),
                ),
                (
                    "is_penthouse",
                    models.BooleanField(default=False, verbose_name="Пентхаус"),
                ),
                (
                    "total_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Общая площадь, м²",
                    ),
                ),
                (
                    "living_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Жилая площадь, м²",
                    ),
                ),
                (
                    "kitchen_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Площадь кухни, м²",
                    ),
                ),
                (
                    "rooms",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество комнат"
                    ),
                ),
                (
                    "floor_number",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Этаж"
                    ),
                ),
                (
                    "loggias_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Лоджии"
                    ),
                ),
                (
                    "balconies_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Балконы"
                    ),
                ),
                (
                    "windows_view_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("street", "На улицу"),
                            ("yard", "Во двор"),
                            ("yardAndStreet", "На улицу и двор"),
                        ],
                        max_length=20,
                        verbose_name="Куда окна",
                    ),
                ),
                (
                    "separate_wcs_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Раздельные с/у"
                    ),
                ),
                (
                    "combined_wcs_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Совмещённые с/у"
                    ),
                ),
                (
                    "repair_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cosmetic", "Косметический"),
                            ("design", "Дизайнерский"),
                            ("euro", "Евроремонт"),
                            ("no", "Без ремонта"),
                        ],
                        max_length=16,
                        verbose_name="Ремонт",
                    ),
                ),
                (
                    "jk_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="ID ЖК (ЦИАН)"
                    ),
                ),
                (
                    "jk_name",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Название ЖК"
                    ),
                ),
                (
                    "house_id",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="ID корпуса (ЦИАН)"
                    ),
                ),
                (
                    "house_name",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Название корпуса"
                    ),
                ),
                (
                    "flat_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        verbose_name="Номер квартиры (не показывается)",
                    ),
                ),
                (
                    "section_number",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="№ секции"
                    ),
                ),
                (
                    "house_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("house", "Жилой дом"),
                            ("dacha", "Дача"),
                            ("townhouse", "Таунхаус"),
                            ("cottage", "Коттедж"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Подтип дома",
                    ),
                ),
                (
                    "heating_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("central", "Центральное"),
                            ("gas", "Газовое"),
                            ("electric", "Электро"),
                            ("solid", "Твёрдое топливо"),
                        ],
                        max_length=20,
                        verbose_name="Отопление",
                    ),
                ),
                (
                    "land_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Площадь участка",
                    ),
                ),
                (
                    "land_area_unit",
                    models.CharField(
                        blank=True,
                        choices=[("sotka", "Сотка"), ("sqm", "м²")],
                        max_length=10,
                        verbose_name="Единица участка",
                    ),
                ),
                (
                    "permitted_land_use",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("individualHousingConstruction", "ИЖС"),
                            ("privateFarm", "ЛПХ"),
                            ("gardening", "Садоводство"),
                            ("horticulture", "Огородничество"),
                            ("suburbanNonProfitPartnership", "Дачное хозяйство"),
                            ("farm", "Фермерское хозяйство"),
                            ("other", "Иное"),
                        ],
                        max_length=48,
                        verbose_name="ВРИ участка",
                    ),
                ),
                (
                    "is_land_with_contract",
                    models.BooleanField(
                        default=False, verbose_name="Участок с подрядом"
                    ),
                ),
                (
                    "land_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("settlements", "Земли населенных пунктов"),
                            ("forAgriculturalPurposes", "С/Х назначения"),
                            ("other", "Иное"),
                        ],
                        max_length=32,
                        verbose_name="Категория земель",
                    ),
                ),
                (
                    "land_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("izh", "ИЖС"),
                            ("agriculture", "С/Х"),
                            ("garden", "СНТ/садовый участок"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Подтип земельного участка",
                    ),
                ),
                (
                    "has_terrace",
                    models.BooleanField(default=False, verbose_name="Есть терраса"),
                ),
                (
                    "has_cellar",
                    models.BooleanField(default=False, verbose_name="Есть погреб"),
                ),
                (
                    "commercial_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("office", "Офис"),
                            ("retail", "Торговая"),
                            ("warehouse", "Склад"),
                            ("production", "Производство"),
                            ("free_purpose", "Свободное назначение"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Подтип коммерции",
                    ),
                ),
                (
                    "is_rent_by_parts",
                    models.BooleanField(
                        default=False, verbose_name="Сдаётся по частям"
                    ),
                ),
                (
                    "rent_by_parts_desc",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Описание сдачи части"
                    ),
                ),
                (
                    "ceiling_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="Высота потолков, м",
                    ),
                ),
                (
                    "power",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Для коммерческих объектов ЦИАН",
                        null=True,
                        verbose_name="Выделенная мощность, кВт",
                    ),
                ),
                (
                    "parking_places",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Количество мест для коммерческих объявлений",
                        null=True,
                        verbose_name="Паркомест",
                    ),
                ),
                (
                    "has_parking",
                    models.BooleanField(default=False, verbose_name="Есть парковка"),
                ),
                (
                    "furnishing_details",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Комплектация (опис.)"
                    ),
                ),
                (
                    "has_internet",
                    models.BooleanField(default=False, verbose_name="Интернет"),
                ),
                (
                    "has_furniture",
                    models.BooleanField(default=False, verbose_name="Мебель"),
                ),
                (
                    "has_kitchen_furniture",
                    models.BooleanField(default=False, verbose_name="Мебель на кухне"),
                ),
                (
                    "has_tv",
                    models.BooleanField(default=False, verbose_name="Телевизор"),
                ),
                (
                    "has_washer",
                    models.BooleanField(
                        default=False, verbose_name="Стиральная машина"
                    ),
                ),
                (
                    "has_conditioner",
                    models.BooleanField(default=False, verbose_name="Кондиционер"),
                ),
                (
                    "has_refrigerator",
                    models.BooleanField(default=False, verbose_name="Холодильник"),
                ),
                (
                    "has_dishwasher",
                    models.BooleanField(default=False, verbose_name="Посудомойка"),
                ),
                ("has_shower", models.BooleanField(default=False, verbose_name="Душ")),
                (
                    "has_phone",
                    models.BooleanField(
                        default=False, verbose_name="Телефон (городской)"
                    ),
                ),
                (
                    "has_ramp",
                    models.BooleanField(
                        default=False,
                        help_text="Наличие пандуса для коммерческого объекта",
                        verbose_name="Пандус",
                    ),
                ),
                (
                    "has_bathtub",
                    models.BooleanField(default=False, verbose_name="Ванна"),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("rur", "RUB"), ("usd", "USD"), ("eur", "EUR")],
                        default="rur",
                        max_length=3,
                        verbose_name="Валюта",
                    ),
                ),
                (
                    "mortgage_allowed",
                    models.BooleanField(default=False, verbose_name="Ипотека возможна"),
                ),
                (
                    "agent_bonus_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Бонус агенту (число)",
                    ),
                ),
                (
                    "agent_bonus_is_percent",
                    models.BooleanField(default=False, verbose_name="Бонус в %"),
                ),
                (
                    "security_deposit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Залог (аренда)",
                    ),
                ),
                (
                    "min_rent_term_months",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Мин. срок аренды (мес.)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="photos/%Y/%m/%d"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
                (
                    "is_default",
                    models.BooleanField(default=False),
                ),
                (
                    "prop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="core.property",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_default", "id"],
            },
        ),
    ]
